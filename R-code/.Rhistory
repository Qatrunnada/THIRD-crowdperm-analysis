y<-fisher.test(tab)
y$expected
y
a=c(1,6,14,23,8)
b=c(2,0,1,8,24)
y1<-fisher.test(a,b,,alternative = "greater",hybrid = TRUE)
y1
y1<-fisher.test(tab,alternative = "less",hybrid = TRUE)
y1
y5<-fisher.test(tab,alternative = "greater",hybrid = TRUE)
y5
#for fishers test:
#http://in-silico.net/tools/statistics/fisher_exact_test
#for chi square-how to report it:
#http://www.stat.purdue.edu/~tqin/system101/method/method_fisher_sas.htm
#https://www.spss-tutorials.com/spss-chi-square-independence-test/
# You get a warning meessage because there are not
# at least 5 obs in each cell of the table
#Try recoding #combine the agree to one, the disagree to one and we end up with 3 instead of 5
meltdata3$value[meltdata3$value==1] <- 2
#meltdata3$value[meltdata3$value==3] <- 2
meltdata3$value[meltdata3$value==4] <- 5
#write.csv(meltdata3, file = "meltdata3.csv")
tab2 = table(meltdata3$variable, meltdata3$value, exclude = c("",1,4))
#tab2 = table(meltdata3$variable, meltdata3$value, exclude = 1)
#tab2 = table(meltdata3$value,meltdata3$variable, exclude = c("",1,4))
tab2
#tab2 = tab2(meltdata3$variable, meltdata3$value, exclude = "3")
#tab2
x2<-chisq.test(tab2)
x2$expected
x2
y2<-fisher.test(tab2)
y3<-fisher.test(tab2,alternative = "greater")
y3
y2$expected
y2
y2$alternative
write.csv(meltdata3, file = "meltdata3.csv")
CrossTable(tab2)
install.packages ("gmodels")
library (gmodels)
CrossTable(tab2)
CrossTable(tab2,fisher=T, chisq=T, expected = T)
CrossTable(tab2,fisher=T, chisq=T, expected = T,prob.c=F, prob.t=F,prob.chisq=F, sresid=T, format = "SPSS" )
CrossTable(tab2,fisher=T, chisq=T, expected = T, sresid=T, format = "SPSS" )
CrossTable(tab2,fisher=T, chisq=T, format = "SPSS" )
odds.ratio(tab2)
#remove the ones with fewer than 5 permissions requested (in python) and read the new file
# Do users tend to allow specific permissions to apps more than other?
data4 = read.csv("permissionDanger_out2.csv", header = T)
names(data4)
# recode names to shorten name to help read output
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "mic"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "loc"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "cam"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "con"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "phn"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "stor"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "cal"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sensor"] <- "sen"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "sms"
newdata4<- melt(data4, id=c("randomint",
"danger.level.of.microphone",
"danger.level.of.location",
"danger.level.of.camera",
"danger.level.of.contacts",
"danger.level.of.phone",
"danger.level.of.storage",
"danger.level.of.calendar",
"danger.level.of.sms"))
attach(newdata4)
leveneTest(value ~ as.factor(variable)) #Test of Homogeneity of Variances
kruskal.test(value~variable) # Kruskal-Wallis rank sum test
pairwise.wilcox.test(value,variable,p.adjust.method="bonf") # Multiple comparisons, bonferroni
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE )
#do it using repeated measures anova
#https://www.gribblelab.org/stats/notes/RepeatedMeasuresANOVA.pdf
#between subjects: aov(dv ~ treatment, data=mydata)
#within subjects: aov(dv ~ treatment + Error(subject/treatment), data=mydata)
#between subjects
#summary(aov(value~variable))
#This notation tells R to slice out of the model an additional error term corresponding to the variance accounted for by subjects.
#The subjects/treatment notation tells R that the treatment factor is the repeated-measures factor over which subjects applies
#within subjects (repeated measures anova):
#So now, the effect of variable (permission) is significant at p = <0.001
summary(aov(value~variable + Error(randomint/variable), data=newdata4))
pairwise.t.test(value,variable,p.adjust.method="bonf",paired=TRUE) # Multiple comparisons, bonferroni
View(newdata4)
#remove the ones with fewer than 5 permissions requested (in python) and read the new file
# Do users tend to allow specific permissions to apps more than other?
data4 = read.csv("permissionDanger_out2.csv", header = T)
names(data4)
# recode names to shorten name to help read output
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "mic"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "loc"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "cam"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "con"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "phn"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "stor"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "cal"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sensor"] <- "sen"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "sms"
#reorder them from lowest to highest
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "Contacts"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "Camera"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "Microphone"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "Phone"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "Calendar"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "Location"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "Storage"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "SMS"
newdata4<- melt(data4, id=c("randomint",
"danger.level.of.microphone",
"danger.level.of.location",
"danger.level.of.camera",
"danger.level.of.contacts",
"danger.level.of.phone",
"danger.level.of.storage",
"danger.level.of.calendar",
"danger.level.of.sms"))
attach(newdata4)
leveneTest(value ~ as.factor(variable)) #Test of Homogeneity of Variances
kruskal.test(value~variable) # Kruskal-Wallis rank sum test
pairwise.wilcox.test(value,variable,p.adjust.method="bonf") # Multiple comparisons, bonferroni
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE )
#do it using repeated measures anova
#https://www.gribblelab.org/stats/notes/RepeatedMeasuresANOVA.pdf
#between subjects: aov(dv ~ treatment, data=mydata)
#within subjects: aov(dv ~ treatment + Error(subject/treatment), data=mydata)
#between subjects
#summary(aov(value~variable))
#This notation tells R to slice out of the model an additional error term corresponding to the variance accounted for by subjects.
#The subjects/treatment notation tells R that the treatment factor is the repeated-measures factor over which subjects applies
#within subjects (repeated measures anova):
#So now, the effect of variable (permission) is significant at p = <0.001
summary(aov(value~variable + Error(randomint/variable), data=newdata4))
pairwise.t.test(value,variable,p.adjust.method="bonf",paired=TRUE) # Multiple comparisons, bonferroni
#spherity is violated, so use MANOVA
newdata4<- melt(data4, id=c("randomint"))
View(data4)
#remove the ones with fewer than 5 permissions requested (in python) and read the new file
# Do users tend to allow specific permissions to apps more than other?
data4 = read.csv("permissionDanger_out2.csv", header = T)
names(data4)
# recode names to shorten name to help read output
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "mic"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "loc"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "cam"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "con"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "phn"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "stor"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "cal"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sensor"] <- "sen"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "sms"
#reorder them from lowest to highest
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "Contacts"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "Camera"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "Microphone"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "Phone"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "Calendar"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "Location"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "Storage"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "SMS"
#newdata4<- melt(data4, id=c("randomint",
#                             "danger.level.of.microphone",
#                             "danger.level.of.location",
#                             "danger.level.of.camera",
#                             "danger.level.of.contacts",
#                             "danger.level.of.phone",
#                             "danger.level.of.storage",
#                             "danger.level.of.calendar",
#                             "danger.level.of.sms"))
newdata4<- melt(data4, id=c("randomint"))
attach(newdata4)
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE )
attach(newdata4)
leveneTest(value ~ as.factor(variable)) #Test of Homogeneity of Variances
kruskal.test(value~variable) # Kruskal-Wallis rank sum test
pairwise.wilcox.test(value,variable,p.adjust.method="bonf") # Multiple comparisons, bonferroni
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE )
# Part 2: Using the background data
#remove the ones with fewer than 5 permissions requested (in python) and read the new file
# Do users tend to allow specific permissions to apps more than other?
data4 = read.csv("permissionDanger_out2.csv", header = T)
names(data4)
# recode names to shorten name to help read output
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "mic"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "loc"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "cam"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "con"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "phn"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "stor"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "cal"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sensor"] <- "sen"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "sms"
#reorder them from lowest to highest
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "Contacts"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "Camera"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "Microphone"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "Phone"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "Calendar"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "Location"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "Storage"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "SMS"
newdata4<- melt(data4, id=c("randomint",
"danger.level.of.microphone",
"danger.level.of.location",
"danger.level.of.camera",
"danger.level.of.contacts",
"danger.level.of.phone",
"danger.level.of.storage",
"danger.level.of.calendar",
"danger.level.of.sms"))
#newdata4<- melt(data4, id=c("randomint"))
attach(newdata4)
leveneTest(value ~ as.factor(variable)) #Test of Homogeneity of Variances
kruskal.test(value~variable) # Kruskal-Wallis rank sum test
pairwise.wilcox.test(value,variable,p.adjust.method="bonf") # Multiple comparisons, bonferroni
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE )
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE, srt = 45 )
labels=c("a","b")
text(mp, par("usr")[3], labels = labels, srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=.9)
axis(1)
p<-plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE)
labels=c("a","b")
text(p, par("usr")[3], labels = labels, srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=.9)
axis(1)
p<-plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE)
labels=c("a","b")
text(p, labels = labels, srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=.9)
axis(1)
p<-plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE)
labels=c("a","b")
text(p, labels = labels, srt = 45)
axis(1)
p<-plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE)
labels=c("a","b")
text(p, labels = labels, srt = 45)
axis(2)
p<-plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE)
angleAxis(1, at=p, labels = c("a","b"), srt=-45, adj=0)
p<-plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE)
a
p
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="fraction of granted permissions", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE)
#This notation tells R to slice out of the model an additional error term corresponding to the variance accounted for by subjects.
#The subjects/treatment notation tells R that the treatment factor is the repeated-measures factor over which subjects applies
#within subjects (repeated measures anova):
#So now, the effect of variable (permission) is significant at p = <0.001
summary(aov(value~variable + Error(randomint/variable), data=newdata4))
pairwise.t.test(value,variable,p.adjust.method="bonf",paired=TRUE) # Multiple comparisons, bonferroni
#spherity is violated, so use MANOVA
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE)
grid(NA, 5, lwd = 2)
par(lab = c(mx, my, 7))
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE,y.ticks = 10)
grid(NA, 5, lwd = 2)
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE,y.ticks = 10)
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE,y.ticks = 10)
PlotMeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE,y.ticks = 10)
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE,y.ticks =5)
#grid(NA, 5, lwd = 2)
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Mean of fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE,y.ticks =5)
# Part 2: Using the background data
#remove the ones with fewer than 5 permissions requested (in python) and read the new file
# Do users tend to allow specific permissions to apps more than other?
data4 = read.csv("permissionDanger_out2.csv", header = T)
names(data4)
# recode names to shorten name to help read output
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "mic"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "loc"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "cam"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "con"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "phn"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "stor"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "cal"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sensor"] <- "sen"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "sms"
#reorder them from lowest to highest
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "Contacts"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "Camera"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "Mic"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "Phone"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "Calendar"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "Location"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "Storage"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "SMS"
newdata4<- melt(data4, id=c("randomint",
"danger.level.of.microphone",
"danger.level.of.location",
"danger.level.of.camera",
"danger.level.of.contacts",
"danger.level.of.phone",
"danger.level.of.storage",
"danger.level.of.calendar",
"danger.level.of.sms"))
#newdata4<- melt(data4, id=c("randomint"))
attach(newdata4)
leveneTest(value ~ as.factor(variable)) #Test of Homogeneity of Variances
kruskal.test(value~variable) # Kruskal-Wallis rank sum test
pairwise.wilcox.test(value,variable,p.adjust.method="bonf") # Multiple comparisons, bonferroni
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Mean of fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE,y.ticks =5)
#grid(NA, 5, lwd = 2)
#angleAxis(1, at=p, labels = c("a","b"), srt=-45, adj=0)
#labels=c("a","b")
#text(p, labels = labels, srt = 45)
#axis(2)
#do it using repeated measures anova
#https://www.gribblelab.org/stats/notes/RepeatedMeasuresANOVA.pdf
#between subjects: aov(dv ~ treatment, data=mydata)
#within subjects: aov(dv ~ treatment + Error(subject/treatment), data=mydata)
#between subjects
#summary(aov(value~variable))
#This notation tells R to slice out of the model an additional error term corresponding to the variance accounted for by subjects.
#The subjects/treatment notation tells R that the treatment factor is the repeated-measures factor over which subjects applies
#within subjects (repeated measures anova):
#So now, the effect of variable (permission) is significant at p = <0.001
summary(aov(value~variable + Error(randomint/variable), data=newdata4))
pairwise.t.test(value,variable,p.adjust.method="bonf",paired=TRUE) # Multiple comparisons, bonferroni
#spherity is violated, so use MANOVA
# What is the relationship between usage time and % enabled permissions?
data5 = read.csv("Background_UsageTimeData.csv", header = T)
names(data5)
attach(data5)
data5$per.granted <- (number.of.permissions.granted / number.of.permissions.requested)
# Filter out zeros in granted apps (0 requested)
data5$number.of.permissions.requested[data5$number.of.permissions.requested==0] <- NA
# Create caregorical variable
data5$per.granted.cat[data5$per.granted==0] <- 0
data5$per.granted.cat[data5$per.granted>0 & data5$per.granted<1] <- 1
data5$per.granted.cat[data5$per.granted==1] <- 2
vars <- c("usagetime", "per.granted", "per.granted.cat",
"number.of.permissions.requested", "randomint")
data5.subset <- na.omit(data5[vars])
attach(data5.subset)
qqnorm(usagetime) # Is the data normally distributed?
qqnorm(log(usagetime+.1)) # Is the data normally distributed?
hist(per.granted)
qqnorm(per.granted) # Is the data normally distributed?
qqnorm(log(per.granted+.1)) # Is the data normally distributed?
hist(per.granted.cat) # Categorical variable makes more sense
#this formula is for Linear Mixed Effect analysis, with requested permissions as the fixed effect and subject as random effect to take into account the within subjects design
summary(lme(log(usagetime+.1) ~ as.factor(per.granted.cat) + number.of.permissions.requested,
random=~1|randomint, data = data5.subset))
anova(lme(log(usagetime+.1) ~ as.factor(per.granted.cat) + number.of.permissions.requested,
random=~1|randomint, data = data5.subset))
plot(jitter(log(usagetime+.1))~jitter(data5.subset$per.granted.cat))
# What is the relationship between usage time and % enabled permissions?
data5 = read.csv("Background_UsageTimeData.csv", header = T)
names(data5)
attach(data5)
data5$per.granted <- (number.of.permissions.granted / number.of.permissions.requested)
# Filter out zeros in granted apps (0 requested)
data5$number.of.permissions.requested[data5$number.of.permissions.requested==0] <- NA
# Create caregorical variable
data5$per.granted.cat[data5$per.granted==0] <- 0
data5$per.granted.cat[data5$per.granted>0 & data5$per.granted<1] <- 1
data5$per.granted.cat[data5$per.granted==1] <- 2
vars <- c("usagetime", "per.granted", "per.granted.cat",
"number.of.permissions.requested", "randomint")
data5.subset <- na.omit(data5[vars])
attach(data5.subset)
qqnorm(usagetime) # Is the data normally distributed?
qqnorm(log(usagetime+.1)) # Is the data normally distributed?
hist(per.granted)
qqnorm(per.granted) # Is the data normally distributed?
qqnorm(log(per.granted+.1)) # Is the data normally distributed?
hist(per.granted.cat) # Categorical variable makes more sense
#this formula is for Linear Mixed Effect analysis, with requested permissions as the fixed effect and subject as random effect to take into account the within subjects design
summary(lme(log(usagetime+.1) ~ as.factor(per.granted.cat) + number.of.permissions.requested,
random=~1|randomint, data = data5.subset))
anova(lme(log(usagetime+.1) ~ as.factor(per.granted.cat) + number.of.permissions.requested,
random=~1|randomint, data = data5.subset))
#plot(jitter(log(usagetime+.1))~jitter(data5.subset$per.granted.cat))
# Ismail, Qatrunnada
# 2018-04-22
rm(list=ls())  # Clears all the variables from memory.
graphics.off() # Clears all the graphs.
# Set working directory
#setwd("~/Box Sync/newds/Service/ISCC-consulting/Ismail, Qatrunnada")
setwd("/Users/QN/THIRD-crowdperm-analysis/R-code")
library(car)
library(reshape)
library(Hmisc)
library(nlme)
library(lme4)
library(gplots)
library(MASS)
library (gmodels)
#remove the ones with fewer than 5 permissions requested (in python) and read the new file
# Do users tend to allow specific permissions to apps more than other?
data4 = read.csv("permissionDanger_out2.csv", header = T)
names(data4)
# recode names to shorten name to help read output
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "mic"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "loc"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "cam"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "con"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "phn"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "stor"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "cal"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sensor"] <- "sen"
#colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "sms"
#reorder them from lowest to highest
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.contacts"] <- "Contacts"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.camera"] <- "Camera"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.microphone"] <- "Mic"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.phone"] <- "Phone"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.calendar"] <- "Calendar"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.location"] <- "Location"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.storage"] <- "Storage"
colnames(data4)[colnames(data4)=="fraction.of.apps.granted.sms"] <- "SMS"
newdata4<- melt(data4, id=c("randomint",
"danger.level.of.microphone",
"danger.level.of.location",
"danger.level.of.camera",
"danger.level.of.contacts",
"danger.level.of.phone",
"danger.level.of.storage",
"danger.level.of.calendar",
"danger.level.of.sms"))
#newdata4<- melt(data4, id=c("randomint"))
attach(newdata4)
plotmeans(as.numeric(value) ~ variable,xlab="Permission",
ylab="Mean of fraction of times it was granted", main="Mean Plot with 95% CI", data = newdata4,
n.label = F,connect=FALSE,y.ticks =5)
#grid(NA, 5, lwd = 2)
#angleAxis(1, at=p, labels = c("a","b"), srt=-45, adj=0)
#labels=c("a","b")
#text(p, labels = labels, srt = 45)
#axis(2)
#do it using repeated measures anova
#https://www.gribblelab.org/stats/notes/RepeatedMeasuresANOVA.pdf
#between subjects: aov(dv ~ treatment, data=mydata)
#within subjects: aov(dv ~ treatment + Error(subject/treatment), data=mydata)
#between subjects
#summary(aov(value~variable))
#This notation tells R to slice out of the model an additional error term corresponding to the variance accounted for by subjects.
#The subjects/treatment notation tells R that the treatment factor is the repeated-measures factor over which subjects applies
#within subjects (repeated measures anova):
#So now, the effect of variable (permission) is significant at p = <0.001
summary(aov(value~variable + Error(randomint/variable), data=newdata4))
pairwise.t.test(value,variable,p.adjust.method="bonf",paired=TRUE) # Multiple comparisons, bonferroni
# What is the relationship between usage time and % enabled permissions?
data5 = read.csv("Background_UsageTimeData.csv", header = T)
names(data5)
attach(data5)
data5$per.granted <- (number.of.permissions.granted / number.of.permissions.requested)
# Filter out zeros in granted apps (0 requested)
data5$number.of.permissions.requested[data5$number.of.permissions.requested==0] <- NA
# Create caregorical variable
data5$per.granted.cat[data5$per.granted==0] <- 0
data5$per.granted.cat[data5$per.granted>0 & data5$per.granted<1] <- 1
data5$per.granted.cat[data5$per.granted==1] <- 2
vars <- c("usagetime", "per.granted", "per.granted.cat",
"number.of.permissions.requested", "randomint")
data5.subset <- na.omit(data5[vars])
attach(data5.subset)
qqnorm(usagetime) # Is the data normally distributed?
qqnorm(log(usagetime+.1)) # Is the data normally distributed?
hist(per.granted)
qqnorm(per.granted) # Is the data normally distributed?
qqnorm(log(per.granted+.1)) # Is the data normally distributed?
hist(per.granted.cat) # Categorical variable makes more sense
#this formula is for Linear Mixed Effect analysis, with requested permissions as the fixed effect and subject as random effect to take into account the within subjects design
summary(lme(log(usagetime+.1) ~ as.factor(per.granted.cat) + number.of.permissions.requested,
random=~1|randomint, data = data5.subset))
anova(lme(log(usagetime+.1) ~ as.factor(per.granted.cat) + number.of.permissions.requested,
random=~1|randomint, data = data5.subset))
